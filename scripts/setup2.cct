begin       >       store(fend) '@call :funcend %0' nl '@goto :eof' nl nl endstore
                    store(goend) nl '@goto :eof' nl endstore
                    store(fbegin) "@call :funcbegin %0 '%~1' '%~2' '%~3' '%~4' '%~5' '%~6' '%~7' '%~8' '%~9'" endstore
                    store(alpha) "abcdefghijklmnopqrstuvwxyz" endstore
                    use(main)

group(main)
'['             >   dup back(1) use(section)
':taskgroup '   >   ':'
nl '#'          >   nl 'rem ' 
c nl 'label='     >   nl ':: Section: ' 
':ampmhour'     >   dup use(copy)
endfile         >   nl out(fend) nl dup
nl nl           >   nl back(1)
c ']'           >   nl back(1) use(funcstart)
nl 't='         >   nl 'call '
nl 's='         >   nl '@if defined info2 echo sub: %0 '

group(section)
'[variables'    >  use(variables)
'[setup'        >  use(setup)
'[tools'        >  use(tools)
'['             >  out(fend) ':' use(funcstart)
'[end]'         >   out(goend) use(main) c end of ini file

group(variables)
']'         >   ':: Autogenerated file from project.txt, xrun.ini and func.cmd' nl 
                'call :tools' nl
                'call :sys' nl
                'call :variables' nl
                'setlocal enabledelayedexpansion' nl
                'if defined info2 echo    %magenta%====  %title%  ====%reset%' nl
                'if defined info2 echo.' nl
                'call :%1' nl 
                'goto :eof' nl  nl      
                ':variables' nl out(fbegin)
                use(var)

group(setup)
']'         >   out(fend)
                ':sys'
                c out(fbegin)
                use(var)

group(tools)
']'         >   '@goto :eof' nl nl
                nl ':tools'
                c out(fbegin)
                use(var)

group(copy)
'x'         >   dup

group(var)
c nl fol(alpha)      >   dup 'set '

nl              >   dup 'set '
'['             >   dup back(1) use(main)
nl nl           >   nl back(1)
nl nl nl        >   nl nl back(2)
nl nl '['       >   dup back(2) use(main)
nl '#'          >   nl 'rem ' 
endfile         >   nl '@goto :eof' nl dup
nl endfile      >   nl '@goto :eof' nl dup



group(funcstart)
']'         >   nl
nl 'b='     >   next
nl 'button='     >   store(button) use(endb)
nl 't='     >   out(fbegin) dup back(4) use(main)
nl 'label='     >   ':: Button group: ' use(endlabel)
nl 'g='     >   ':: Button group: '
nl 'l='     >   ':: Button group: '
nl 's='         >   nl ':: Group: '
nl '#'     >   'rem ' use(endrem)
nl '[' >   dup back(2) use(main)

group(endb)
nl          >   endstore 
                'set button=' out(button) dup 
                'set fundendtitle=' out(button) dup 
                out(fbegin) nl nl back(2) use(main)

group(endrem)
nl          >   dup back(1) dup use(funcstart)

group(endlabel)
nl          >    dup dup back(1) use(funcstart)

group(endsub)
nl          >    dup dup back(1) use(funcstart)
